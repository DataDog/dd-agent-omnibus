#!/bin/sh

LOG_DIR=/var/log/datadog
INSTALL_DIR=/opt/datadog-agent
OPT_APP_DIR="$INSTALL_DIR/Datadog Agent.app"
APP_DIR="/Applications/Datadog Agent.app"
CONF_DIR=$INSTALL_DIR/etc
RUN_DIR=$INSTALL_DIR/run

# We log stdout & stderr of this script
LOG_FILE=$LOG_DIR/postinstall.log
mkdir -vp $LOG_DIR
exec > $LOG_FILE 2>&1

# OS/Distro Detection
DISTRIBUTION=$(grep -Eo "(Debian|Ubuntu|RedHat|CentOS|openSUSE|Amazon)" /etc/issue 2>/dev/null || uname -s)

if [ $DISTRIBUTION = "Darwin" ]; then
  echo "# State at the beginning"
  echo "## Agent version"
  grep AGENT_VERSION $INSTALL_DIR/agent/config.py || echo "No config file"
  echo "## $INSTALL_DIR"
  ls -al $INSTALL_DIR || echo "No agent installed"
  echo "## $APP_DIR/Contents/Resources"
  ls -al "$APP_DIR/Contents/Resources" || echo "No app installed"

  echo "# Determining install user"
  # Determine current user if he is using the Graphical installer
  INSTALL_USER=$(ps aux | grep "CoreServices/Installer" | grep -v grep | awk '{print $1;}')

  # Otherwise, we hope he is using the install script and try to this user
  # If it fails, no choice but to use root :'(
  if [ -z "$INSTALL_USER" ] || [ "$INSTALL_USER" == "root" ]; then
    SCRIPT_INSTALL="yes"
    INSTALL_USER=`cat /tmp/datadog-install-user || echo 'root'`
    rm -v /tmp/datadog-install-user || true
  fi
  echo "INSTALL_USER: $INSTALL_USER"

  echo "# Preparing log dir"
  # Prepare log dir
  chown -vR $INSTALL_USER:admin $LOG_DIR
  chmod -v 755 $LOG_DIR

  echo "# Installing the app"
  # Installing the app
  mv -v "$OPT_APP_DIR" /Applications || echo "App already installed"

  echo "# Preparing the run directory"
  # Set the run directory for the agent
  mkdir -vp "$RUN_DIR"
  chown -vR $INSTALL_USER:admin "$RUN_DIR"
  chmod -v 755 "$RUN_DIR"

  echo "# Creating default plist"
  # Prepare plist
  sed "s|USER_NAME|$INSTALL_USER|" $CONF_DIR/com.datadoghq.agent.plist.example > $CONF_DIR/com.datadoghq.agent.plist

  echo "# Copying conf"
  # Create directory for custom checks
  mkdir -vp $CONF_DIR/checks.d

  # Copying existing conf is one exists
  if [ -e "/tmp/datadog.conf" ]; then
    mv -vf /tmp/datadog.conf $CONF_DIR
    # We only saved *.yaml files
    mv -vf /tmp/conf.d/* $CONF_DIR/conf.d
    cp -vn /tmp/checks.d/* $CONF_DIR/checks.d
    rm -vrf /tmp/datadog.conf /tmp/conf.d /tmp/checks.d
  # Or copying default
  else
    sed -E 's/^api_key:$/api_key: APIKEY/' $CONF_DIR/datadog.conf.example > $CONF_DIR/datadog.conf
  fi

  echo "# Setting correct rights on conf"
  # Correct rights
  chown -v $INSTALL_USER:admin $CONF_DIR/datadog.conf
  chown -vR $INSTALL_USER:admin $CONF_DIR/conf.d $CONF_DIR/checks.d

  echo "# add link to datadog-agent for user"
  # `datadog-agent` command line
  mkdir -vp /usr/local/bin
  ln -vs $INSTALL_DIR/bin/datadog-agent /usr/local/bin/datadog-agent

  echo "# link to ~/.datadog-agent for the user"
  # Link for conf files (let's ease the user's life)
  USER_HOME=`sudo -Hu $INSTALL_USER sh -c 'echo $HOME'`
  sudo -Hu $INSTALL_USER mkdir -vp "$USER_HOME/.datadog-agent"
  rm -vf "$USER_HOME/.datadog-agent/conf.d" "$USER_HOME/.datadog-agent/datadog.conf" "$USER_HOME/.datadog-agent/checks.d"
  sudo -Hu $INSTALL_USER ln -vs $CONF_DIR/conf.d "$USER_HOME/.datadog-agent/conf.d"
  sudo -Hu $INSTALL_USER ln -vs $CONF_DIR/datadog.conf "$USER_HOME/.datadog-agent/datadog.conf"
  sudo -Hu $INSTALL_USER ln -vs $CONF_DIR/checks.d "$USER_HOME/.datadog-agent/checks.d"

  # Error if app not properly installed or root
  if [ "$INSTALL_USER" == "root" ]; then
    echo 'INSTALL_USER is set to root, Datadog Agent app has been installed'
    echo 'but is not configured. Running Datadog Agent as root is not advised!'
    exit 1
  fi

  if [ ! -e $CONF_DIR/datadog.conf ]; then
    exit 1
  fi

  # Start the app only if it's not a script install
  if [ -z "$SCRIPT_INSTALL" ]; then
    echo "# Starting the app"
    # -a for application, -F for fresh, do not restore old app
    sudo -u $INSTALL_USER open -Fa 'Datadog Agent'
  fi

  echo "# Configuring the login launch of the app"
  # And finally configure the app to be launched at login
  sudo -u $INSTALL_USER osascript -e 'tell application "System Events" to delete every login item whose name is "Datadog Agent"'
  sudo -u $INSTALL_USER osascript -e 'tell application "System Events" to make login item at end with properties {path:"/Applications/Datadog Agent.app", name:"Datadog Agent", hidden:false}'

  echo "# State at the end"
  echo "## Agent version"
  grep AGENT_VERSION $INSTALL_DIR/agent/config.py || echo "No config file"
  echo "## $INSTALL_DIR"
  ls -al $INSTALL_DIR || echo "No agent installed"
  echo "## $APP_DIR/Contents/Resources"
  ls -al "$APP_DIR/Contents/Resources" || echo "No app installed"
fi
exit 0
